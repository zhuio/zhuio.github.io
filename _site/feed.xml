<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<generator uri="http://jekyllrb.com" version="3.1.6">Jekyll</generator>
<link href="https://zhuio.github.io/feed.xml" rel="self" type="application/atom+xml" />
<link href="https://zhuio.github.io/" rel="alternate" type="text/html" />
<updated>2017-01-21T22:56:26+08:00</updated>
<id>https://zhuio.github.io/</id>
<subtitle>朱智博，朱智博的博客，zhuio,zhuio.github.io,</subtitle>
<entry>
<title>煎蛋妹子图爬虫</title>
<link href="https://zhuio.github.io/%E7%85%8E%E8%9B%8B%E5%A6%B9%E5%AD%90%E5%9B%BE%E7%88%AC%E8%99%AB/" rel="alternate" type="text/html" title="煎蛋妹子图爬虫" />
<published>2017-01-21T16:52:00+08:00</published>
<updated>2017-01-21T16:52:00+08:00</updated>
<id>https://zhuio.github.io/煎蛋妹子图爬虫</id>
<content type="html" xml:base="https://zhuio.github.io/%E7%85%8E%E8%9B%8B%E5%A6%B9%E5%AD%90%E5%9B%BE%E7%88%AC%E8%99%AB/">&lt;h3 id=&quot;python&quot;&gt;用python爬取煎蛋上妹子图&lt;/h3&gt;

&lt;p&gt;用到beautifulsoup4
requests
time
urllib.request.urlopen&lt;/p&gt;

&lt;p&gt;{% highlight css %}
import urllib.request
import bs4 as bs
import requests
import re
import time
import random&lt;/p&gt;

&lt;p&gt;def parser(page):
    urls = []
    for i in range(2000,page):
        url = ‘http://jandan.net/ooxx/page-{}’.format(str(i))
        urls.append(url)
    for a in urls:
        sauce = urllib.request.urlopen(a)
        soup = bs.BeautifulSoup(sauce,’lxml’)
        imgs = soup.find_all(‘img’)
        for img in imgs:
            src = re.compile(‘src=”//(.&lt;em&gt;)”.&lt;/em&gt;/&amp;gt;’)
            findsrc = re.findall(src,str(img))
            try:
                for i in findsrc:
                    time.sleep(0.05)
                    headers = {‘User-Agent’:’Mozilla/5.0 (Windows NT 6.1; WOW64; rv:23.0) Gecko/20100101 Firefox/23.0’}
                    req = urllib.request.Request(url=’https://’+i, headers=headers)
                    data = urllib.request.urlopen(req).read()
                    path = ‘images/’+str(random.random())
                    with open(path,’wb’) as f:
                        f.write(data)
            except urllib.error.URLError as e:
                print(‘except:’, e)
            finally:
                print(‘完成了’)&lt;/p&gt;

&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == ‘&lt;strong&gt;main&lt;/strong&gt;’:
    parser(2200)&lt;/p&gt;

&lt;p&gt;{% endhighlight %}&lt;/p&gt;
</content>
<summary>用python爬取煎蛋上妹子图</summary>
</entry>
<entry>
<title>pyenv</title>
<link href="https://zhuio.github.io/pyenv/" rel="alternate" type="text/html" title="pyenv" />
<published>2017-01-20T21:41:00+08:00</published>
<updated>2017-01-20T21:41:00+08:00</updated>
<id>https://zhuio.github.io/pyenv</id>
<content type="html" xml:base="https://zhuio.github.io/pyenv/">&lt;h3 id=&quot;pyenv-&quot;&gt;pyenv 安装&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/yyuu/pyenv&quot; title=&quot;pyenv&quot;&gt;pyenv github主页&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/yyuu/pyenv-installer&quot; title=&quot;pyenv-installer&quot;&gt;pyenv-installer&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;github-way-recommended&quot;&gt;Github way (recommended)&lt;/h4&gt;

&lt;p&gt;Install:&lt;/p&gt;

&lt;p&gt;$ curl -L https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer | bash
  Update:&lt;/p&gt;

&lt;p&gt;$ pyenv update
  Uninstall: pyenv is installed within $PYENV_ROOT (default: ~/.pyenv). To uninstall, just remove it:&lt;/p&gt;

&lt;p&gt;$ rm -fr ~/.pyenv
  and remove these three lines from .bashrc:&lt;/p&gt;

&lt;p&gt;export PATH=”~/.pyenv/bin:$PATH”
  eval “$(pyenv init -)”
  eval “$(pyenv virtualenv-init -)”
  If you need, export USE_GIT_URI to use git:// instad of https// for git clone.&lt;/p&gt;

&lt;h4 id=&quot;pyenv--1&quot;&gt;设置 pyenv 环境变量&lt;/h4&gt;
&lt;p&gt;{% highlight css %}
$ cat».bashrc«EOF
export PYENV_ROOT=”$HOME/.pyenv”
export PATH=”$PYENV_ROOT/bin:$PATH”
eval “$(pyenv init -)”
eval “$(pyenv virtualenv-init -)”
EOF&lt;/p&gt;

&lt;p&gt;$ source .bashrc
{% endhighlight %}&lt;/p&gt;
</content>
<category term="python pyenv" />
<summary>pyenv 安装</summary>
</entry>
<entry>
<title>pygame0</title>
<link href="https://zhuio.github.io/pygame/" rel="alternate" type="text/html" title="pygame0" />
<published>2017-01-16T02:12:00+08:00</published>
<updated>2017-01-16T02:12:00+08:00</updated>
<id>https://zhuio.github.io/pygame</id>
<content type="html" xml:base="https://zhuio.github.io/pygame/">&lt;h3 id=&quot;pygame-lts&quot;&gt;pygame lts&lt;/h3&gt;

&lt;h4 id=&quot;pygame-in-youtube&quot;&gt;pygame in youtube&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLQVvvaa0QuDdLkP8MrOXLe_rKuf6r80KO&quot; title=&quot;pygame&quot;&gt;pygame in py3&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;pygame-init&quot;&gt;pygame init&lt;/h4&gt;
&lt;p&gt;{% highlight css %}&lt;/p&gt;

&lt;p&gt;import pygame&lt;/p&gt;

&lt;p&gt;pygame.init()
display = pygame.display.set_mode((800,600))
pygame.display.set_caption(‘my video game’)
clock = pygame.time.Clock()&lt;/p&gt;

&lt;p&gt;crashed = False&lt;/p&gt;

&lt;p&gt;while not crashed:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            crashed = True
        print(event)
    pygame.display.update()
    clock.tick(60)&lt;/p&gt;

&lt;p&gt;pygame.quit()&lt;/p&gt;

&lt;p&gt;{% endhighlight %}&lt;/p&gt;
</content>
<category term="pygame" />
<summary>pygame lts</summary>
</entry>
<entry>
<title>flask</title>
<link href="https://zhuio.github.io/flask/" rel="alternate" type="text/html" title="flask" />
<published>2017-01-15T21:57:00+08:00</published>
<updated>2017-01-15T21:57:00+08:00</updated>
<id>https://zhuio.github.io/flask</id>
<content type="html" xml:base="https://zhuio.github.io/flask/">&lt;h2 id=&quot;flask-&quot;&gt;Flask 的使用方法&lt;/h2&gt;

&lt;h3 id=&quot;flask-on-youtube&quot;&gt;Flask on youtube&lt;/h3&gt;

&lt;h4 id=&quot;templates&quot;&gt;Templates&lt;/h4&gt;

&lt;p&gt;{% highlight css %}
&amp;lt;!DOCTYPE html&amp;gt;&lt;/p&gt;
&lt;html lang=&quot;en&quot;&gt;

&lt;head&gt;

&lt;/head&gt;

&lt;body class=&quot;body&quot;&gt;
	&lt;header&gt;

	&lt;/header&gt;
	 &lt;body&gt;
	   &lt;h3&gt;{{ title }}&lt;/h3&gt;
	   &lt;br /&gt;
		{% for p in paragraph %}
		&lt;p&gt;{{ p }}&lt;/p&gt;
		{% endfor %}
	 &lt;/body&gt;

&amp;lt;/html&amp;gt;
{% endhighlight %}

#### __init__
{% highlight css %}
from flask import Flask,render_template

app = Flask(__name__)

@app.route(&#39;/&#39;)
def homepage():
   try:
       x += 5
       return &quot;Hi there&quot;
   except Exception, e:
       return str(e)

if __name__ == &quot;__main__&quot;:
   app.run()
{% endhighlight %}

[ Flask tutor][c8d8b657]

  [c8d8b657]: https://www.youtube.com/playlist?list=PLQVvvaa0QuDcOS4l8RCWh0olq_je0OKaP &quot;FLASK&quot;

### 做一个漂亮的Chart

[make great charts][797fd254]

  [797fd254]: http://www.highcharts.com/ &quot;charts&quot;

### bootstrap

[Bootstrap][6c7aa1ca]

  [6c7aa1ca]: http://getbootstrap.com/ &quot;use bootstrap&quot;
&lt;/body&gt;&lt;/html&gt;
</content>
<category term="flask" />
<summary>Flask 的使用方法</summary>
</entry>
<entry>
<title>sqlite3</title>
<link href="https://zhuio.github.io/sqlite3/" rel="alternate" type="text/html" title="sqlite3" />
<published>2017-01-15T01:59:00+08:00</published>
<updated>2017-01-15T01:59:00+08:00</updated>
<id>https://zhuio.github.io/sqlite3</id>
<content type="html" xml:base="https://zhuio.github.io/sqlite3/">&lt;h3 id=&quot;sqlite3&quot;&gt;sqlite3使用&lt;/h3&gt;

&lt;h4 id=&quot;sqlite3-1&quot;&gt;sqlite3基本使用方法&lt;/h4&gt;
&lt;p&gt;{% highlight css %}&lt;/p&gt;

&lt;p&gt;import sqlite3&lt;/p&gt;

&lt;p&gt;conn = sqlite3.connect(‘tutorial.db’)
c = conn.cursor()&lt;/p&gt;

&lt;p&gt;def creat_table():
	c.execute(“CREATE TABLE IF NOT EXISTS stuffToPlot(unix REAL,timeStamp TEXT,keyword TEXT,value REAL)”)&lt;/p&gt;

&lt;p&gt;def data_entry():
	c.execute(“INSERT INTO stuffToPlot VALUES(141313141,’2017-1-14 00:37:24’,’python’,5)”)
	conn.commit()
	c.close()
	conn.close()&lt;/p&gt;

&lt;p&gt;creat_table()
data_entry()&lt;/p&gt;

&lt;p&gt;{% endhighlight %}
#### 动态添加数据库
{% highlight css %}&lt;/p&gt;

&lt;p&gt;import sqlite3
import time
import datetime
import random&lt;/p&gt;

&lt;p&gt;conn = sqlite3.connect(‘tutor1.db’)
c = conn.cursor()&lt;/p&gt;

&lt;p&gt;def creat_table():
	c.execute(“CREATE TABLE IF NOT EXISTS stuffToPlot(unix REAL,timeStamp TEXT,keyword TEXT,value REAL)”)&lt;/p&gt;

&lt;p&gt;def data_entry():
	for i in range(10):
		unix = time.time()
		date = str(datetime.datetime.fromtimestamp(unix).strftime(‘%Y-%m-%d %H-%M-%S’))
		keyword = ‘python’
		value = random.randrange(0,10)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;	c.execute(&quot;INSERT INTO stuffToPlot (unix,timeStamp,keyword,value) VALUES(?,?,?,?)&quot;,(unix,date,keyword,value))
	conn.commit()
&lt;/div&gt;

&lt;p&gt;creat_table()
data_entry()
conn.close()
{% endhighlight %}&lt;/p&gt;
</content>
<category term="sqlite3" />
<summary>sqlite3使用</summary>
</entry>
<entry>
<title>ubuntu安装的软件</title>
<link href="https://zhuio.github.io/ubuntucmd/" rel="alternate" type="text/html" title="ubuntu安装的软件" />
<published>2017-01-12T00:00:00+08:00</published>
<updated>2017-01-12T00:00:00+08:00</updated>
<id>https://zhuio.github.io/ubuntucmd</id>
<content type="html" xml:base="https://zhuio.github.io/ubuntucmd/">&lt;h2 id=&quot;ubuntu&quot;&gt;ubuntu安装的软件&lt;/h2&gt;

&lt;h3 id=&quot;shadowsocks&quot;&gt;shadowsocks&lt;/h3&gt;
&lt;p&gt;https://github.com/shadowsocks/shadowsocks-qt5/wiki/%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97&lt;/p&gt;

&lt;h3 id=&quot;vscode&quot;&gt;vscode&lt;/h3&gt;
&lt;p&gt;https://code.visualstudio.com/&lt;/p&gt;

&lt;h3 id=&quot;sublime&quot;&gt;sublime&lt;/h3&gt;
&lt;p&gt;https://www.sublimetext.com/&lt;/p&gt;

&lt;h3 id=&quot;chrome&quot;&gt;chrome&lt;/h3&gt;
&lt;p&gt;http://www.ubuntuchrome.com/&lt;/p&gt;

</content>
<category term="ubuntu" />
<summary>ubuntu安装的软件</summary>
</entry>
<entry>
<title>tensorflow资源</title>
<link href="https://zhuio.github.io/tensorflow0/" rel="alternate" type="text/html" title="tensorflow资源" />
<published>2017-01-12T00:00:00+08:00</published>
<updated>2017-01-12T00:00:00+08:00</updated>
<id>https://zhuio.github.io/tensorflow0</id>
<content type="html" xml:base="https://zhuio.github.io/tensorflow0/">&lt;h2 id=&quot;tensorflow&quot;&gt;tensorflow资源&lt;/h2&gt;
&lt;p&gt;https://github.com/CreatCodeBuild&lt;/p&gt;

&lt;p&gt;https://www.kaggle.com/&lt;/p&gt;

&lt;p&gt;https://www.openai.com/blog/&lt;/p&gt;

&lt;p&gt;https://gitter.im&lt;/p&gt;
</content>
<category term="tensorflow" />
<summary>tensorflow资源</summary>
</entry>
<entry>
<title>node.js实践</title>
<link href="https://zhuio.github.io/node0/" rel="alternate" type="text/html" title="node.js实践" />
<published>2017-01-11T00:00:00+08:00</published>
<updated>2017-01-11T00:00:00+08:00</updated>
<id>https://zhuio.github.io/node0</id>
<content type="html" xml:base="https://zhuio.github.io/node0/">&lt;h2 id=&quot;nodejs&quot;&gt;node.js实践&lt;/h2&gt;

&lt;h3 id=&quot;section&quot;&gt;应用不同模块分析&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;我们需要提供 Web ⻚面,因此需要一个 HTTP 服务器
对于不同的请求,根据请求的 URL ,我们的服务器需要给予不同的响应,因此&lt;/li&gt;
  &lt;li&gt;我们需要一个 路由 ,用于把请求对应到请求处理程序( request handler )
当请求被服务器接收并通过路由传递之后,需要可以对其进行处理,因此我们
需要最终的 请求处理程序&lt;/li&gt;
  &lt;li&gt;路由还应该能处理 POST 数据,并且把数据封装成更友好的格式传递给请求处
理入程序,因此需要 请求数据处理功能&lt;/li&gt;
  &lt;li&gt;我们不仅仅要处理 URL 对应的请求,还要把内容显示出来,这意味着我们需要
一些 视图逻辑 供请求处理程序使用,以便将内容发送给用戶的浏览器&lt;/li&gt;
  &lt;li&gt;最后,用戶需要上传图片,所以我们需要 上传处理功能 来处理这方面的细节&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;http-&quot;&gt;一个基础的 HTTP 服务器&lt;/h4&gt;
&lt;p&gt;{% highlight css %}
var http = require(“http”);
http.createServer(function(request, response) {
  response.writeHead(200, {“Content-Type”: “text/plain”});
  response.write(“Hello World”);
  response.end();
}).listen(8888);
{% endhighlight %}&lt;/p&gt;
</content>
<category term="sample" />
<category term="nodw" />
<category term="jekyll" />
<summary>node.js实践</summary>
</entry>
<entry>
<title>第一篇blog</title>
<link href="https://zhuio.github.io/firstblog/" rel="alternate" type="text/html" title="第一篇blog" />
<published>2017-01-10T00:00:00+08:00</published>
<updated>2017-01-10T00:00:00+08:00</updated>
<id>https://zhuio.github.io/firstblog</id>
<content type="html" xml:base="https://zhuio.github.io/firstblog/">&lt;h2 id=&quot;jekyllblog&quot;&gt;简单用jekyll搭建的一个blog&lt;/h2&gt;
&lt;p&gt;原先用HTML5搭建的首页不能写BLOG，改用jekyll搭建，简单又好看，不错。
  早上6：53&lt;/p&gt;
</content>
<category term="test" />
<category term="useless" />
<category term="sample" />
<category term="first" />
<category term="jekyll" />
<summary>朱智博的BLOG上线了，随便写点什么，做个测试</summary>
</entry>
<entry>
<title>Markdown Syntax</title>
<link href="https://zhuio.github.io/markdown-syntax/" rel="alternate" type="text/html" title="Markdown Syntax" />
<published>2016-03-15T00:00:00+08:00</published>
<updated>2016-03-15T00:00:00+08:00</updated>
<id>https://zhuio.github.io/markdown-syntax</id>
<content type="html" xml:base="https://zhuio.github.io/markdown-syntax/">&lt;h2 id=&quot;html-elements&quot;&gt;HTML Elements&lt;/h2&gt;

&lt;p&gt;Below is just about everything you’ll need to style in the theme. Check the source code to see the many embedded elements within paragraphs.&lt;/p&gt;

&lt;h1 id=&quot;heading-1&quot;&gt;Heading 1&lt;/h1&gt;

&lt;h2 id=&quot;heading-2&quot;&gt;Heading 2&lt;/h2&gt;

&lt;h3 id=&quot;heading-3&quot;&gt;Heading 3&lt;/h3&gt;

&lt;h4 id=&quot;heading-4&quot;&gt;Heading 4&lt;/h4&gt;

&lt;h5 id=&quot;heading-5&quot;&gt;Heading 5&lt;/h5&gt;

&lt;h6 id=&quot;heading-6&quot;&gt;Heading 6&lt;/h6&gt;

&lt;h3 id=&quot;body-text&quot;&gt;Body text&lt;/h3&gt;

&lt;p&gt;Lorem ipsum dolor sit amet, test link adipiscing elit. &lt;strong&gt;This is strong&lt;/strong&gt;. Nullam dignissim convallis est. Quisque aliquam.&lt;/p&gt;

&lt;p class=&quot;image-right&quot;&gt;&lt;img src=&quot;https://mmistakes.github.io/minimal-mistakes/images/3953273590_704e3899d5_m.jpg&quot; alt=&quot;Smithsonian Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This is emphasized&lt;/em&gt;. Donec faucibus. Nunc iaculis suscipit dui. 53 = 125. Water is H2O. Nam sit amet sem. Aliquam libero nisi, imperdiet at, tincidunt nec, gravida vehicula, nisl. The New York Times (That’s a citation). Underline.Maecenas ornare tortor. Donec sed tellus eget sapien fringilla nonummy. Mauris a ante. Suspendisse quam sem, consequat at, commodo vitae, feugiat in, nunc. Morbi imperdiet augue quis tellus.&lt;/p&gt;

&lt;p&gt;HTML and CSS are our tools. Mauris a ante. Suspendisse quam sem, consequat at, commodo vitae, feugiat in, nunc. Morbi imperdiet augue quis tellus. Praesent mattis, massa quis luctus fermentum, turpis mi volutpat justo, eu volutpat enim diam eget metus.&lt;/p&gt;

&lt;h3 id=&quot;blockquotes&quot;&gt;Blockquotes&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Lorem ipsum dolor sit amet, test link adipiscing elit. Nullam dignissim convallis est. Quisque aliquam.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;list-types&quot;&gt;List Types&lt;/h2&gt;

&lt;h3 id=&quot;ordered-lists&quot;&gt;Ordered Lists&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Item one
    &lt;ol&gt;
      &lt;li&gt;sub item one&lt;/li&gt;
      &lt;li&gt;sub item two&lt;/li&gt;
      &lt;li&gt;sub item three&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Item two&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;unordered-lists&quot;&gt;Unordered Lists&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Item one&lt;/li&gt;
  &lt;li&gt;Item two&lt;/li&gt;
  &lt;li&gt;Item three&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;tables&quot;&gt;Tables&lt;/h2&gt;

&lt;table rules=&quot;groups&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Header1&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Header2&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Header3&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;cell1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;cell2&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;cell3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;cell4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;cell5&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;cell6&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;cell1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;cell2&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;cell3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;cell4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;cell5&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;cell6&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tfoot&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Foot1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Foot2&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;Foot3&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
&lt;/table&gt;

&lt;h2 id=&quot;code-snippets&quot;&gt;Code Snippets&lt;/h2&gt;

&lt;p&gt;{% highlight css %}
#container {
  float: left;
  margin: 0 -240px 0 0;
  width: 100%;
}
{% endhighlight %}&lt;/p&gt;

&lt;h2 id=&quot;buttons&quot;&gt;Buttons&lt;/h2&gt;

&lt;p&gt;Make any link standout more when applying the &lt;code class=&quot;highlighter-rouge&quot;&gt;.btn&lt;/code&gt; class.&lt;/p&gt;

&lt;p&gt;{% highlight html %}
&lt;a href=&quot;#&quot; class=&quot;btn btn-success&quot;&gt;Success Button&lt;/a&gt;
{% endhighlight %}&lt;/p&gt;

&lt;div&gt;&lt;a href=&quot;#&quot; class=&quot;btn&quot;&gt;Primary Button&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;#&quot; class=&quot;btn btn-success&quot;&gt;Success Button&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;#&quot; class=&quot;btn btn-warning&quot;&gt;Warning Button&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;#&quot; class=&quot;btn btn-danger&quot;&gt;Danger Button&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;#&quot; class=&quot;btn btn-info&quot;&gt;Info Button&lt;/a&gt;&lt;/div&gt;

&lt;h2 id=&quot;kbd&quot;&gt;KBD&lt;/h2&gt;

&lt;p&gt;You can also use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;kbd&amp;gt;&lt;/code&gt; tag for keyboard buttons.&lt;/p&gt;

&lt;p&gt;{% highlight html %}
&lt;kbd&gt;W&lt;/kbd&gt;&lt;kbd&gt;A&lt;/kbd&gt;&lt;kbd&gt;S&lt;/kbd&gt;&lt;kbd&gt;D&lt;/kbd&gt;
{% endhighlight %}&lt;/p&gt;

&lt;p&gt;Press &lt;kbd&gt;W&lt;/kbd&gt;&lt;kbd&gt;A&lt;/kbd&gt;&lt;kbd&gt;S&lt;/kbd&gt;&lt;kbd&gt;D&lt;/kbd&gt; to move your car. &lt;strong&gt;Midtown Maddness!!&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;notices&quot;&gt;Notices&lt;/h2&gt;

&lt;p class=&quot;notice&quot;&gt;&lt;strong&gt;Watch out!&lt;/strong&gt; You can also add notices by appending &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.notice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt; to a paragraph.&lt;/p&gt;
</content>
<category term="markdown" />
<category term="syntax" />
<category term="sample" />
<category term="test" />
<category term="jekyll" />
<summary>Just about everything you’ll need to style in the theme: headings, paragraphs, blockquotes, tables, code blocks, and more.</summary>
</entry>
</feed>
